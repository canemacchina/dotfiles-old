
### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node

### End of Zinit's installer chunk

# prompt
setopt promptsubst
zinit light denysdovhan/spaceship-prompt

zinit light ${ZSH_CUSTOM}/plugins/aliases
zinit light ${ZSH_CUSTOM}/plugins/functions

zinit wait lucid for \
  OMZL::completion.zsh \
  OMZL::git.zsh \
  OMZL::compfix.zsh \
  OMZL::history.zsh \
  OMZL::spectrum.zsh \
  OMZP::colored-man-pages \
  as"completion" atinit"ZINIT[COMPINIT_OPTS]='-i' zicompinit; zicdreplay" \
    OMZP::docker/_docker \
  as"completion" atinit"ZINIT[COMPINIT_OPTS]='-i' zicompinit; zicdreplay" \
    OMZP::docker-compose/_docker-compose \
  OMZP::gradle \
  OMZP::mvn \
  OMZP::git \
  OMZP::python \
  OMZP::npm \
  blockf \
    zsh-users/zsh-history-substring-search \
  caarlos0/zsh-open-pr \
  voronkovich/gitignore.plugin.zsh \
  blockf \
    as"completion" atinit"ZINIT[COMPINIT_OPTS]='-i' zicompinit; zicdreplay" \
      zsh-users/zsh-completions \
  as"completion" atinit"ZINIT[COMPINIT_OPTS]='-i' zicompinit; zicdreplay" \
    lukechilds/zsh-better-npm-completion \
  ${ZSH_CUSTOM}/plugins/bindkey \
  atinit"ZINIT[COMPINIT_OPTS]='-i' zicompinit; zicdreplay" \
    ${ZSH_CUSTOM}/plugins/completions \
  ${ZSH_CUSTOM}/plugins/opts \
  ${ZSH_CUSTOM}/plugins/gulp \
  ${ZSH_CUSTOM}/plugins/colors \
  '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc' \
  atinit"ZINIT[COMPINIT_OPTS]='-i' zicompinit; zicdreplay" pick"completion.zsh.inc"\
    '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk'

zinit wait lucid as"program" make'!' atclone'./direnv hook zsh > zhook.zsh' \
  atpull'%atclone' pick"direnv" src"zhook.zsh" for \
    direnv/direnv

# this must be the last loaded
zinit wait lucid for \
  atinit"ZINIT[COMPINIT_OPTS]='-i' zpcompinit; zpcdreplay" \
    zdharma/fast-syntax-highlighting

# iterm2 integration
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# load zmv
autoload -U add-zsh-hook zmv

find_nvmrc(){
  dir=$(pwd -L)
  while [ -n "$dir" -a ! -f "$dir/.nvmrc" ]; do
      dir=${dir%/*}
  done
  if [ -f "$dir/.nvmrc" ]; then printf '%s\n' "$dir/.nvmrc"; fi
}

load-nvmrc() {
  local nvmrc_path="$(find_nvmrc)"
  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")
    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
      nvm use
    fi
  fi
}

[ -s "$BREW_PREFIX/opt/nvm/nvm.sh" ] && . "$BREW_PREFIX/opt/nvm/nvm.sh" # This loads nvm
[ -s "$BREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" ] && . "$BREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion
add-zsh-hook chpwd load-nvmrc
load-nvmrc
