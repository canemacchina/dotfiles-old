source ~/git/zgen/zgen.zsh
# if the init scipt doesn't exist
if ! zgen saved; then
	printf "$(tput setaf 7)Creating a zgen save...\033[m\n"

	zgen oh-my-zsh

	zgen oh-my-zsh lib/completion.zsh
	zgen oh-my-zsh lib/git.zsh
	zgen oh-my-zsh lib/history.zsh
	zgen oh-my-zsh lib/spectrum.zsh
	zgen oh-my-zsh lib/theme-and-appearance.zsh

	zgen oh-my-zsh plugins/docker
	zgen oh-my-zsh plugins/docker-compose
	zgen oh-my-zsh plugins/git
	zgen oh-my-zsh plugins/colored-man-pages
	zgen oh-my-zsh plugins/python
	zgen oh-my-zsh plugins/mvn
	zgen oh-my-zsh plugins/npm

	zgen load zsh-users/zsh-completions src
	# Load docker completions
	if [ -d /Applications/Docker.app ]; then
		for f in /Applications/Docker.app/Contents/Resources/etc/*.zsh-completion;
		do
    	ln -sf "$f" "$HOME/.zgen/_${$(basename $f)%.zsh-completion}"
		done
	fi
	zgen load caarlos0/zsh-open-pr
	zgen load voronkovich/gitignore.plugin.zsh
	zgen load lukechilds/zsh-better-npm-completion

	zgen load ${ZSH_CUSTOM}/plugins/gulp
	zgen load ${ZSH_CUSTOM}/plugins/bindkey
	zgen load denysdovhan/spaceship-prompt spaceship

	# this must be the last loaded
	zgen load zdharma/fast-syntax-highlighting

	# generate the init script from plugins above
	zgen save
fi

source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'
source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'

#eval "$(direnv hook zsh)"

# Fix some autocomplete options
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=31=33'
zstyle ':completion:*' special-dirs true
compctl -K listMavenCompletions mvn-color

compctl -g '~/.itermocil/*(:t:r)' itermocil

if type brew &>/dev/null; then
  FPATH=$BREW_PREFIX/share/zsh/site-functions:$FPATH
fi

autoload -Uz compinit

# Cache completion if nothing changed - faster startup time
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit -i
else
  compinit -C -i
fi

zmodload -i zsh/complist

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Load the shell dotfiles, and then some:
for file in ~/.{aliases,functions,git-prompt}; do
	[ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

find_nvmrc(){
  dir=$(pwd -L)
  while [ -n "$dir" -a ! -f "$dir/.nvmrc" ]; do
      dir=${dir%/*}
  done
  if [ -f "$dir/.nvmrc" ]; then printf '%s\n' "$dir/.nvmrc"; fi
}

load-nvmrc() {
  local nvmrc_path="$(find_nvmrc)"
  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")
    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
      nvm use
    fi
  fi
}

# nvm() {
#   unset -f nvm
#   [ -s "$BREW_PREFIX/opt/nvm/nvm.sh" ] && . "$BREW_PREFIX/opt/nvm/nvm.sh" # This loads nvm
#   [ -s "$BREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" ] && . "$BREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion
#   echo "$@"
#   nvm "$@"
# }

# node() {
#   unset -f node
#   nvm use default
#   load-nvmrc
#   node "$@"
# }

[ -s "$BREW_PREFIX/opt/nvm/nvm.sh" ] && . "$BREW_PREFIX/opt/nvm/nvm.sh" # This loads nvm
[ -s "$BREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" ] && . "$BREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion
autoload -U add-zsh-hook zmv
add-zsh-hook chpwd load-nvmrc
load-nvmrc
